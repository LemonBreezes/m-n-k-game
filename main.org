#+title: A Python Tic Tac Toe game

* Outline
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 14:52]
:END:

#+BEGIN_SRC python :noweb yes :tangle main.py :exports none
"""This is a Python Tic Tac Toe game"""

# imports
import sys
<<tictactoe-main-imports>>

# constants

# exception classes

# interface functions

# classes
<<TicTacToeGame-defn>>

# internal functions & classes
<<tictactoe-main>>

if __name__ == '__main__':
    status = main()
    sys.exit(status)
#+END_SRC

* Main
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 15:54]
:END:

#+name: tictactoe-main
#+begin_src python
def main():
    game = TicTacToeGame(num)
    game.start()
    return 0
#+end_src

* Define the ~TicTacToeGame~ class
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 16:20]
:END:

#+name: TicTacToeGame-defn
#+begin_src python
class TicTacToeGame(object):
    def __init__(self):
        pass

    def start(self):
        pass
#+end_src

** Personal planning
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 22:18]
:END:

*** The first step: How do I encode the board's state?
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 22:23]
:END:

So I need to first figure out how to store the state of the game. The game is a
two-dimensional grid of characters, which I will encode as non-negative integers,
one for each player and one encoding an empty tile.

* Define the TicTacToeBoard class
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 22:32]
:END:

#+begin_src python
class TicTacToeBoard(object, size):
    def __init__(self, size):
        self.size = size
        self.board = [[0 for i in size] for j in size]

    def display(self):
        print('\n'.join(','.join(map(str, row))) for row in self.board)

    def addMark(self, x, y, player):
        board[x][y] = player
#+end_src

** Ideas on storing the board's state
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 22:41]
:END:

The only operations the board needs to do are display and add a mark. The board
should be both a matrix of integers and an unordered set of sequences of
adjacencies. I can use an array of numbers for the board and a set of numbers
for the sequences of adjacencies.

** TODO Prevent players from marking an already marked tile.
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 22:55]
:END:

* Imports
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 15:59]
:END:

#+name: tictactoe-main-imports
#+begin_src python
#+end_src
