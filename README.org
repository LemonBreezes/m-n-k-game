
[[./assets/screenshot.png]]

* Introduction
:PROPERTIES:
:CREATED_TIME: [2021-12-19 Sun 18:44]
:END:

A simple, modified version of Tic Tac Toe implemented with AI in Python using
PyGame.

* Installation
:PROPERTIES:
:CREATED_TIME: [2021-11-07 Sun 21:44]
:END:

** From source
:PROPERTIES:
:CREATED_TIME: [2021-12-19 Sun 18:46]
:END:

#+begin_src sh
git clone https://github.com/LemonBreezes/m-n-k-game
cd m-n-k-game
python -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python run_tests.py
#+end_src

* Usage
:PROPERTIES:
:CREATED_TIME: [2021-12-19 Sun 18:55]
:END:

** From source
:PROPERTIES:
:CREATED_TIME: [2021-12-23 Thu 20:15]
:END:

#+begin_src sh
cd path/to/m-n-k-game
source venv/bin/activate
python main.py
#+end_src

** Using the commandline arguments
:PROPERTIES:
:CREATED_TIME: [2021-12-24 Fri 17:54]
:END:

By running
#+begin_src sh
python main.py -r 3 -c 4
#+end_src
We are indicating that the game board will have a length of 3 and width of 4. By
default, our games run on a 4x4 game board. Setting the length or width greater
than 4 is not recommended for performance reasons.

You can also set the amount of tiles a player needs to align in order to win by
using the ~-w~ flag:
#+begin_src sh
python main.py -w 4
#+end_src
This parameter defaults to 3. Increasing this parameter is not recommended for
performance reasons.

If you would like to watch two AIs play against each other, use the ~-ai~ flag:
#+begin_src sh
python main.py -ai
#+end_src

Similarly, if you would like to play the game from the command line interface
instead of the graphical interface, use the ~-nw~ flag:
#+begin_src sh
python main.py -nw
#+end_src

If you would like to set which player goes first, set the ~-o~ flag:
#+begin_src sh
python main.py -o 1
#+end_src
Set this parameter to 1 if you would like to go first or 2 if you would like the
AI to go first. This parameter defaults to -1, indicating that
the opening player will be randomly chosen.
